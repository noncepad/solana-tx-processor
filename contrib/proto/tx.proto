syntax = "proto3";

option go_package = "github.com/noncepad/solana-tx-processor/proto/txproc";

package txproc;


service TransactionProcessing{
    rpc Blockhash(Empty) returns (BlockhashResponse) {}
    rpc RentExemption(RentRequest) returns (RentResponse) {}
    rpc Broadcast(BroadcastRequest) returns (TransactionResult) {}
    rpc Create(stream CreateProgramRequest) returns (stream ProgramResponse) {}
    rpc Upgrade(stream UpgradeProgramRequest) returns (stream ProgramResponse) {}
}


message Empty{
}

message BlockhashResponse{
    bytes hash = 1;
}

message RentRequest{
    uint64 size = 1;
}

message RentResponse{
    uint64 lamports = 2;
}

message BroadcastRequest{
    bytes transaction = 1;
    bool simulate = 2;
}


message TransactionResult{
    bytes signature = 1;
    uint64 slot = 2;
}


message CreateProgramRequest {
    oneof payload{
        CreateProgramMeta meta = 1;
        ProgramData data = 2;
    }
}

message CreateProgramMeta{
    string vanity_prefix = 1;
    uint32 program_size = 2;
    bytes upgrade_authority = 3; // server will transfer authority to this pubkey
    bytes refund_address = 4;
    optional bytes id_private = 5; // client provides private key; useful for vanity addresses
}

message ProgramData{
    bytes data = 1;
}


message ProgramJob{
    uint64 job_id = 1;  // job id
    int64 expire = 2; // when will all data be deleted
    bytes id = 3;  // the program id for create, buffer id for upgrade
    bytes deposit_address = 4; // money to which a deposit must be made to start the job
    uint64 required_deposit = 5; // how much money is required to start the job
}

message JobLog{
    string line = 1;
}

message ProgramResponse{
    oneof payload{
        ProgramJob job = 1;
        JobLog log = 2;
    }
}


message UpgradeProgramRequest{
    oneof payload{
        UpgradeProgramMeta meta = 1;
        ProgramData data = 2;
    }
}

message UpgradeProgramMeta{
    uint32 program_size = 1;
    bytes upgrade_authority = 2; // server will transfer authority to this pubkey
    bytes refund_address = 3; 
}

